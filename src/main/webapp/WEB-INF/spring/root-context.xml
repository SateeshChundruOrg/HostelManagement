<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<context:component-scan base-package="com.ayansys.effort" />
	<context:annotation-config />
	<task:annotation-driven />
	<context:property-placeholder	location="/WEB-INF/spring/local-constants.xml"/> 
		
 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />

		<property name="url"
			value="jdbc:mysql://${dp_ip}:${db_port}/${db}?autoReconnect=true" />
		<property name="username" value="${db_username}" />
		<property name="password" value="${db_password}" />

		<!-- The initial number of connections that are created when the pool is 
			started. -->
		<property name="initialSize" value="2" />

		<!-- The maximum number of active connections that can be allocated from 
			this pool at the same time, or negative for no limit. -->
		<property name="maxActive" value="-1" />

		<!-- The minimum number of connections that can remain idle in the pool, 
			without extra ones being created when the evictor runs, or 0 to create none. -->
		<property name="minIdle" value="2" />
		<!-- The maximum number of connections that can remain idle in the pool, 
			without extra ones being destroyed, or negative for no limit. -->
		<property name="maxIdle" value="2" />
		<property name="testOnBorrow" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT 1" />
		<!-- The minimum amount of time an object may sit idle in the pool before 
			it is eligible for eviction by the idle object evictor (if any). 60000 checks 
			every 10 minutes. -->
		<property name="minEvictableIdleTimeMillis" value="600000" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	   <bean id="authenticationSuccessHandler" class="com.ateam.hostelmanagement.handler.CustomAuthenticationSuccessHandler" />
	
	<security:http auto-config="true" use-expressions="true" access-denied-page="/accessDenied" authentication-manager-ref="operationAuthenticationManager">
		<security:intercept-url pattern="/" access="hasAnyRole('ROLE_ADMIN','ROLE_AGENT')" />
		<security:intercept-url pattern="/web*" access="hasAnyRole('ROLE_ADMIN','ROLE_AGENT')" />
		<security:intercept-url pattern="/web/**" access="hasAnyRole('ROLE_ADMIN','ROLE_AGENT')" />
		<security:form-login login-page="/login" default-target-url="/web" authentication-failure-url="/loginfailed" authentication-success-handler-ref="authenticationSuccessHandler"/>
		<security:remember-me/>
		<security:logout logout-url="/logout" invalidate-session="true" logout-success-url="/login" />
	</security:http>
	
	<security:authentication-manager id="operationAuthenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT `oppUserName` AS `username`, `oppPassword` AS `password`, `enabled` FROM `OppUsers` WHERE `oppUserName` = ?" 
           		authorities-by-username-query="SELECT ? AS `username`, 'ROLE_AGENT' AS `authority`" 
           />
		</security:authentication-provider>
	</security:authentication-manager> 
     
	
	
	<import resource="tiles-context.xml" />
			
		
</beans>
